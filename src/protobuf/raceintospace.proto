
package raceintospace;

message Equipment {
	required string name = 1;	// Name of Hardware
	required string id = 2;		// Equipment ID
	required int32 safety_factor = 3;
	required int32 mission_safety = 4;
	required int32 docking_safety_factor = 5;
	required int32 base_safety_factor = 6;
	required int32 initial_cost = 7;
	required int32 unit_cost = 8;
	required int32 unit_weight = 9;
	required int32 maximum_payload = 10;
	required int32 r_and_d_cost  = 11;
	required int32 inventory_scheduled = 12;
	required int32 inventory_count = 13;
	required int32 inventory_reserved = 14;
	required int32 inventory_seasons = 15;
	required int32 inventory_used = 16;
	required int32 steps = 17;
	required int32 failures = 18;
	required int32 maximum_r_and_d = 19;
	required int32 maximum_safety_factor = 20;
	required int32 safety_factor_mods = 21;
	required int32 safety_save_card = 22;
	required int32 purchase_delay = 23;
	required int32 duration = 24;
	required int32 damage_percentage = 25;
	required int32 damage_repair_cost = 26;
	required int32 mission_successes = 27;
	required int32 mission_failures = 28;
}

message MissionType {
	required string name = 1;      /**< name of mission */
	required int32 mission_code = 2;   /**< internal code of mission type */
	required int32 patch = 3;         /**< Patch Used on this Mission */
	required int32 mission_part = 4;          /**< primary/secondary portion */
	required int32 Hardware_capsule = 5;       /**< Prime,Kick,LEM,PayLoad,Rocket */
	required int32 hardware_kicker = 6;       /**< Prime,Kick,LEM,PayLoad,Rocket */
	required int32 hardware_lem = 7;       /**< Prime,Kick,LEM,PayLoad,Rocket */
	required int32 hardware_probe_dockingModule = 8;       /**< Prime,Kick,LEM,PayLoad,Rocket */
	required int32 hardware_primary_Booster = 9;       /**< Prime,Kick,LEM,PayLoad,Rocket */
	required int32 hardware_eva = 10;       /**< Prime,Kick,LEM,PayLoad,Rocket */
	required int32 joint = 11;         /**< Joint Mission flag */
	required int32 rushing = 12;       /**< rushing time 0-3 */
	required int32 month = 13;         /**< Month of Launch */
	required int32 duration = 14;      /**< Duration time */
	required int32 men = 15;           /**< Qty of men used in mission */
	required int32 prog = 16;          /**< Hardware program used */
	required int32 primary_crew = 17;         /**< Primary Crew */
	required int32 backup_crew = 18;         /**< Backup Crew */
	required int32 crew = 19;          /**< Actual Mission Crew */
};

message Astronauts {
	required string name = 1;     /**< Astronaut Name */
	required int32 face_id = 2;         /**< Code for Astronaut Face */
	required int32 sex = 3;          /**< Male or Female */
	required int32 compatibility = 4;       /**< Compatability Code */
	required int32 compatibility_right = 5;           /**< Range of Compatability Right */
	required int32 compatiibility_left = 6;           /**< Range of Compatability Left */
	required int32 moved = 7;        /**< if 0 Astro Moved around this turn */
	required int32 mission_success = 8;          /**< Successful Mission this Turn */
	required int32 happy = 9;        /**< \brief Happy within group */
	required int32 prime = 10;        /**< \brief indicates the type of crew s/he's in */
	required int32 active = 11;       /**< Seasons Active */
	required int32 ai_special = 12;    /**< AI Special Astro Note */
	required int32 service = 13;      /**< Service of Origination */
	required int32 status = 14;       /**< Current status of Astronaut */
	required int32 focus = 15;        /**< Focus of Advanced Training 0-4 */
	required int32 injury_delay = 16;       /**< Injury Delay - Ok if 0 */
	required int32 retirement_delay = 17;       /**< Retire Delay - Retire if 0 */
	required int32 retirement_reason = 18;      /**< Retire Reason flag */
	required int32 special = 19;      /**< Special for announcements */
	required int32 assignment = 20;       /**< Location of Astro 0=limbo */
	required int32 old_assignment = 21;    /**< program of last turn */
	required int32 unassigned = 22;          /**< Unassigned flag */
	required int32 crew = 23;         /**< Crew Assiciated in prog Assigm */
	required int32 task = 24;         /**< What his job is in Flt Crew */
	required int32 prestige = 25;  /**< Prestige Earned */
	required int32 days = 26;         /**< Days in Space */
	required int32 medals = 27;       /**< Medals Earned */
	required int32 save = 28;         /**< Astro Saving Roll Percent */
	required int32 missions = 29;     /**< Number of Missions Flown */
	repeated int32 mission_num = 30;       /**< Mission[10] numbers participated */
	required int32 capsule_skill = 31;          /**< Capsule Pilot Skills */
	required int32 lem_skill = 32;           /**< LEM Pilot Skills */
	required int32 eva_skill = 33;          /**< EVA Skills */
	required int32 docking_skill = 34;      /**< Docking Skills */
	required int32 endurance_skill = 35;    /**< Constitution Skills */
	required int32 training_level = 36;/**< Level of Schooling */
	required int32 group = 37;        /**< Group Entered with */
	required int32 mood = 38;         /**< Mood of Astronaut */
	required int32 pool = 39;         /**< Temp Storage for Astros */
	required int32 hero = 40;         /**< Hero Status */
};


message PrestigeHistory
{
	required int32 actual = 1;
	required int32 random = 2;
}

message PrestigeUpdate {
	repeated int32 Poss = 1; // char[10];
	repeated int32 PossVal = 2;        // char[10];
	required int32 Hind = 3;  // gets set to history index of past mission
	required int32 quantity = 4;
	required int32 month = 5;
};

message PastInfo {
	repeated string mission_name = 1; // was char[2][25];       /**< Name of Mission */
	repeated int32 patch = 2;                 /**< was char[2] - Patch Type */
	required int32 mission_code = 3;              /**< Type of Mission */
	required int32 mission_year = 4;              /**< Year Mission Took Place */
	required int32 month = 5;                    /**< Month of Launch */
	required int32 time = 6;                     /**< Early / Late Flag */
	repeated int32 crew_pad_a = 7;                /**< Astros # involved in Mis */
	repeated int32 crew_pad_b = 8;                /**< Astros # involved in Mis */
	repeated int32 hardware_pad_a = 9;               /**< Set of hardware */
	repeated int32 hardware_pad_b = 10;
	required int32 result = 11;               /**< Success / Failure */
	required int32 sp_result = 12;             /**< Actual deciding Result */
	required int32 event = 13;                    /**< Single event code */
	required int32 safety = 14;                      /**< Safety of the Equipment for delays */
	required int32 part = 15;                     /**< Participant in event code */
	required int32 prestige = 16;              /**< Prestige Earned on this Mission */
	required int32 duration = 17;                 /**< Length of Mission (units:ABCDEF) */
};

message HardwareSpending {
	required int32 probe = 1;
	required int32 rocket = 2;
	required int32 manned = 3;
	required int32 misc = 4;
};

message PastIntel {
	required int32 code = 1;
	required int32 num = 2;
	required int32 prog = 3;
	required int32 cur = 4;
	required int32 index = 5;
	required int32 sf = 6;
	required int32 cdex = 7;
};

message AstronautCrew {
	repeated int32 flight_crew = 1;
}

message  FlightCrew {
	repeated FlightCrew crew = 1;
}


message BuzzData {
	required int32 header = 1;    // was Header[4] - was unused - could indicate which player
	required string player_name = 2; // Name[20]
	
	// moved from GameDefaults
	required PlayerSettings player_settings = 3; 
	
	required int32 cash = 4;    // current cash on hand
	required int32 budget = 5;  // next seasons budget
	required int32 prestige = 6; // prestige earned
	
	// moved from prestige structure
	required int32 prestige_goal = 7;       /**< Goal steps used for prestige calculations */
	required int32 prestige_points = 8;     /**< Total points earned */
	
	// this was PrestHist[5][2]
	repeated PrestigeHistory prestige_history = 9;  // char[5] of actual prestige history
	
	repeated int32 presidental_review_history = 11; // char[5]
	repeated int32 seasonal_prestige = 12;          // was tempPrestige[2]
	repeated int32 budget_history = 13;  // int16_t[40];
	repeated int32 budget_history_fake = 14; // int16_t[40] - randomized from actual values
	
	repeated HardwareSpending historical_spending = 15;  // int16_t[5]
		
	required int32 r_and_d_turn_mods = 16;  // R&D mods for turn only
	required int32 r_and_d_year_mods = 17;  // R&D mods for full year
	required int32 turn_only_events = 18;   // events for this turn only
	required int32 plans = 19;
	required int32 future_plans = 20;  // special future mission

	required int32 duration_level = 21;  // current duration level
	required int32 lem_test_points = 22; // accumulation of LM Test points

	repeated Equipment probe = 23;
	repeated Equipment rocket = 24;
	repeated Equipment manned = 25;
	repeated Equipment misc = 26;    

	required bool docking_module_in_orbit = 27; // initially 2
	repeated int32 launch_facility = 28; // char[3] for each launchpad
	
	required int32 astronaut_count = 29; // number in program
	required int32 astronaut_level = 30; // which purchase tier
	required int32 astronaut_delay = 31; // season delay to train new astros
	
	repeated Astronauts astronaut_pool = 32; // Astros[65]
		
	repeated PrestigeUpdate prestige_update = 33;
	
	// This was a matrix of IntelHardwareTable[5][7], only needs [4][7]
	repeated int32 intel_hardware_table_probe = 34;
	repeated int32 intel_hardware_table_rockets = 35;
	repeated int32 intel_hardware_table_manned = 36;
	repeated int32 intel_hardware_table_misc = 37;
	
	repeated AstronautCrew gcnt = 38;  // GCnt[6][8]
	repeated FlightCrew crew = 39;  // Crew [6][8][4]
	
	required bool female_astronauts_allowed = 40;
	
	repeated MissionType missions = 41;
	required int32 blocked_mission_number = 42;
	repeated MissionType future_missions = 43;
	repeated PastInfo mission_history = 44;
	required int32 past_mission_count = 45;
	required int32 mission_catastrophic_failure_on_turn = 46;
	
	// Record of R&D purchase for Turn	 was [4][7]
	repeated int32 buy_probe = 47;
	repeated int32 buy_rockets = 48;
	repeated int32 buy_manned = 49;
	repeated int32 buy_misc = 50;
	
	required int32 news_event_count = 51;    // eCount
	repeated PastIntel past_intellegence = 52;  // PastIntel[30]
	required int32 ai_strategy = 53; // char[10]
	
	required int32 ai_Lunar = 54;
	required int32 ai_Primary = 55;
	required int32 ai_Secondary = 56;
	required int32 ai_Status = 57;
	repeated int32 bad_card_event_flags = 58; // char[15]
	repeated int32 space_port_levels = 59; // char[40]

	// moved from players structure
	repeated int32 prestige_firsts = 60;     // Prestige Firsts [28]
	repeated int32 milestones = 61;   		/**< MileStone Calcs [10] */
}

message PlayerSettings {
	required int32 player_type = 1;  // 0=USA,1=USSR
									 // 2=AI+USA,3=AI+USSR
									 // 4=Foreign,5=AI+Foreign
									 // 6=PBEM+USA,7=PBEM+USSR
	required int32 skill_level = 2;  // 0 = Easy, 1 = Medium, 2 = Hard
	required int32 astronaut_level= 3;   // 0 = Easy, 1 = Medium, 2 = Hard
}

message GameDefaults {
	required int32 input = 1;  // 0 = mouse, 1 = keyboard, 2 = joystick
	required int32 animation = 2; // 0 = full, 1 = partial, 2 = results only
	required int32 music = 3; // 0 = full, 1 = partial, 2 = none
	required bool sound_effects_disabled = 4; // false = On, true = Off
};

message PrestigeType {
	repeated int32 bonuses = 1;        /**< 0=first,1=second, 2=additional,3=negative  - was Add[4]*/
    required int32 index = 2;         /**< the index for the first into .History[] */
    required int32 place = 3;         /**< Who got the prestige first. */
    required int32 mPlace = 4;        /**< If you've done it at all */
    required int32 month = 5;         /**< Date of the First */
    required int32 year = 6;          /**< Date of the First */
}

// Primary structure of game data
message Players {
	required int32 file_signature = 1;  /**< Save Version Marker */
	required int32 checksum = 2;        /**< Checksum of Data */
	repeated int32 player_turn_order = 3;  // Order of turns - char[NUM_PLAYERS]
	required GameDefaults defaults = 4;
	required int32 year = 5;      /**< Game Turn */
	required int32 season = 6;    /**< Season of Year */
	required int32 picked_event_cards = 7;         // picked event cards	
	repeated int32 event_cards = 8;    // char[100] - event card ordering
	repeated PrestigeType Prestige = 9;   /**< Definitions of Prest Vals - PrestType[28] */
	repeated BuzzData player_data = 10;  /**< Player Game Data  BuzzData[2]*/
};

